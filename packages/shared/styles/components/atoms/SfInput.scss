@import "../../variables/scss/functions";

$input-c-accent: css(input, c-accent, var(--c-primary));
$input-c-default: css(input, c-default, var(--c-light));
$input-c-text: css(input, c-text, var(--c-text));

$input-padding: 15px 0 10px 0;
$input-margin: 0 0 var(--spacer-small) 0;
$input-border: 1px solid $input-c-default;
$input-border-width: 0 0 1px 0;
$input-font: font(
  input,
  400,
  var(--font-size-big),
  1.6,
  var(--body-font-family-secondary)
);
$input-label-top: css(input-label, top, 50%);
$input-label-transform: translate3d(0, calc(#{$input-label-top} * -1), 0);
$input-label-transition: top 150ms linear, font-size 150ms linear;
$input-password-icon-width: css(input-password-icon, width, 22px);

.sf-input {
  position: relative;
  box-sizing: border-box;
  width: css(input, width);
  height: css(input, height);
  color: css(input, color, $input-c-text);
  font: css(input, font, $input-font);
  &__label {
    position: absolute;
    top: #{$input-label-top};
    color: css(input-label, color, inherit);
    font-size: css(input-label, font-size, inherit);
    transform: css(input-label, transform, $input-label-transform);
    transition: css(input-label, transition, $input-label-transition);
    &::after {
      content: var(--input-label-required);
      color: css(input-label, color, $input-c-accent);
    }
  }
  &__bar {
    position: relative;
    display: block;
    &::before,
    &::after {
      position: absolute;
      bottom: 0;
      width: css(input-bar, width, 0);
      height: 1px;
      background: css(input-bar, background, $input-c-accent);
      transition: width 150ms linear;
      content: "";
    }
    &::before {
      left: 50%;
    }
    &::after {
      right: 50%;
    }
  }
  &__password-button {
    --button-c-accent: transparent;
    --button-c-hover: transparent;
    --button-padding: 0;
    position: absolute;
    top: 50%;
    right: var(--spacer-big);
    transform: translate3d(0, -50%, 0);
  }
  &__password-icon {
    --icon-width: #{$input-password-icon-width};
    --icon-height: 13px;
    --icon-color: var(--c-dark-variant);
    position: relative;
    &--hidden {
      --icon-color: var(--c-gray-variant);
      --input-password-icon-scaleX: 1;
    }
    &::after {
      position: absolute;
      top: 50%;
      width: 100%;
      height: 1px;
      background: var(--c-gray-variant);
      transform: translate3d(0, -50%, 0) rotate(45deg)
        scaleX(var(--input-password-icon-scaleX, 0));
      transition: transform 150ms linear;
      content: "";
    }
  }
  &__error-message {
    color: css(input-error-message, color, var(--c-danger));
    font-size: css(input-error-message, font-size, var(--font-size-small));
  }
  &__wrapper,
  input {
    width: 100%;
    height: 100%;
  }
  &__wrapper {
    position: relative;
    margin: css(input, margin, $input-margin);
  }
  input {
    display: block;
    box-sizing: border-box;
    padding: css(input, padding, $input-padding);
    border: css(input, border, $input-border);
    border-width: css(input, border-width, $input-border-width);
    background: css(input, background);
    color: inherit;
    font: inherit;
    outline: 0;
    &:focus {
      & ~ * {
        --input-label-top: 0;
        --input-label-color: #{$input-c-accent};
        --input-label-font-size: var(--font-size-extra-small);
        --input-bar-width: 50%;
      }
    }
    &:required {
      & ~ * {
        --input-label-required: " *";
      }
    }
    &:disabled {
      & ~ * {
        --input-color: var(--c-text-muted);
        --input-label-color: var(--c-text-muted);
      }
    }
    &[type="number"] {
      &::-webkit-inner-spin-button,
      &::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
    }
    &[type="password"] {
      --input-padding: 15px
        calc(var(--spacer-big) * 2 + #{$input-password-icon-width}) 10px 0;
    }
  }
  &--has-text {
    --input-label-top: 0;
    --input-label-font-size: var(--font-size-extra-small);
  }
}
